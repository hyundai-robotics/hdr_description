<?xml version="1.0" encoding="UTF-8"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg name)">
  <xacro:arg name="robot_model" default="hdr220_26" />
  <xacro:arg name="name" default="hdr_robot"/>
  <xacro:arg name="use_sim" default="false" />
  <xacro:arg name="use_mock_hardware" default="false" />
  <xacro:arg name="hdr_ros2_control" default="" />
  <xacro:arg name="hw_interface" default="" />
  <xacro:arg name="openapi_ip" default="192.168.1.150" />
  <xacro:arg name="openapi_port" default="8888" />
  <xacro:arg name="initial_positions_file" default=""/>

  <xacro:property name="initial_positions_file" value="$(arg initial_positions_file)"/>
  
  <xacro:include filename="$(find hdr_description)/urdf/robots/$(arg robot_model)/$(arg robot_model).urdf.xacro" />
  <xacro:include filename="$(find hdr_description)/urdf/hdr.ros2_control.xacro" />
  
  <xacro:hdr_ros2_control 
    name="$(arg name)" 
    robot_model="$(arg robot_model)"
    use_sim="$(arg use_sim)"
    use_mock_hardware="$(arg use_mock_hardware)"
    initial_positions_file="$(arg initial_positions_file)"
    openapi_ip="$(arg openapi_ip)"
    openapi_port="$(arg openapi_port)"
  />

  <xacro:include filename="$(find hdr_description)/urdf/hdr_transmissions.xacro" />
  <xacro:hdr_transmission 
    hw_interface="$(arg hw_interface)"
  />

  <xacro:if value="$(arg use_sim)">
    <link name="ground_plane">
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="5 5 0"/>
        </geometry>
        <material name="ground_white">
          <color rgba="1 1 1 0.5"/>
        </material>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="5 5 0"/>
        </geometry>
      </collision>
    </link>

    <joint name="ground_plane_joint" type="fixed">
      <origin xyz="0 0 -0.01" rpy="0 0 0"/>
      <parent link="world"/>
      <child link="ground_plane"/>
    </joint>

    <gazebo reference="world">
    </gazebo>
    <gazebo>
      <plugin filename="libgz_ros2_control-system.so" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
        <parameters>$(arg hdr_ros2_control)</parameters>
        <controller_manager_node_name>controller_manager</controller_manager_node_name>
      </plugin>
    </gazebo>
  </xacro:if>
</robot>